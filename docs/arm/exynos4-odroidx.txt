	Xvisor on ODroid-X using SD Booting

This section of the readme explains how to build & run Xvisor on an actual
ODroid-X development board, using the SD card for booting.

By default, Xvisor for Exynos4 supports VExpress-A9 guests, so we will
show how to run Basic Firmware (and/or Linux) on VExpress-A9 guest.

For booting from SD card we first need to install the first and second
level bootloader as well as u-boot to the SD card. For more info, refer
http://com.odroid.com/sigong/blog/blog_list.php?bid=130

We need to add 2 images in boot partition of SD card that is shipped with
ODroid-X:
 1) U-Boot compatible Xvisor binary (uvmm.bin).
 2) Disk image containing guest binaries (disk.img).

Following steps to create these images and then boot Xvisor on ODroid-X:

  [1. Build environment]
  # export CROSS_COMPILE=arm-linux-gnueabi-

  [2. GoTo Xvisor source directory]
  # cd <xvisor_source_directory>

  [3. Configure Xvisor with ODroid-X host default settings]
  # make ARCH=arm generic-v7-defconfig

  [4. Build Xvisor & DTBs]
  # make

  [5. Make U-Boot compatible uvmm.bin, for use with bootm command]
  # mkimage -A arm -O linux -T kernel -C none -a 0x40008000 -e 0x40008000 -n "Xvisor" -d build/vmm.bin build/uvmm.bin

  [6. Build Basic Firmware]
  # make -C tests/arm32/vexpress-a9/basic

  [7. GoTo Linux source directory]
  # cd <linux_source_directory>

  [8. Configure Linux in build directory]
  # sed -i 's/0xff800000UL/0xff000000UL/' arch/arm/include/asm/pgtable.h
  # cp arch/arm/configs/vexpress_defconfig arch/arm/configs/tmp-vexpress-a9_defconfig
  # <xvisor_source_directory>/tests/common/scripts/update-linux-defconfig.sh -p arch/arm/configs/tmp-vexpress-a9_defconfig -f <xvisor_source_directory>/tests/arm32/vexpress-a9/linux/linux_extra.config
  # make O=<linux_build_directory> ARCH=arm tmp-vexpress-a9_defconfig

  [9. Build Linux in build directory]
  # make O=<linux_build_directory> ARCH=arm Image dtbs

  [10. Patch Linux kernel to replace sensitive non-priviledged instructions]
  # <xvisor_source_directory>/arch/arm/cpu/arm32/elf2cpatch.py -f <linux_build_directory>/vmlinux | <xvisor_source_directory>/build/tools/cpatch/cpatch32 <linux_build_directory>/vmlinux 0

  [11. Extract patched Linux kernel image]
  # ${CROSS_COMPILE}objcopy -O binary <linux_build_directory>/vmlinux <linux_build_directory>/arch/arm/boot/Image

  [12. Create BusyBox RAMDISK to be used as RootFS for Linux kernel]
  (Note: For subsequent steps, we will assume that your RAMDISK is located at <busybox_rootfs_directory>/rootfs.img)
  (Note: Please refer tests/common/busybox/README.md for creating rootfs.img using BusyBox)

  [13. GoTo Xvisor source directory]
  # cd <xvisor_source_directory>

  [14. Create disk image for Xvisor with Guest Linux and Guest Basic Firmware]
  # mkdir -p ./build/disk/tmp
  # mkdir -p ./build/disk/system
  # cp -f ./docs/banner/roman.txt ./build/disk/system/banner.txt
  # cp -f ./docs/logo/xvisor_logo_name.ppm ./build/disk/system/logo.ppm
  # mkdir -p ./build/disk/images/arm32/vexpress-a9
  # dtc -q -I dts -O dtb -o ./build/disk/images/arm32/vexpress-a9-guest.dtb ./tests/arm32/vexpress-a9/vexpress-a9-guest.dts
  # cp -f ./build/tests/arm32/vexpress-a9/basic/firmware.bin.patched ./build/disk/images/arm32/vexpress-a9/firmware.bin
  # cp -f ./tests/arm32/vexpress-a9/linux/nor_flash.list ./build/disk/images/arm32/vexpress-a9/nor_flash.list
  # cp -f ./tests/arm32/vexpress-a9/linux/cmdlist ./build/disk/images/arm32/vexpress-a9/cmdlist
  # cp -f ./tests/arm32/vexpress-a9/xscript/one_guest_vexpress-a9.xscript ./build/disk/boot.xscript
  # cp -f <linux_build_directory>/arch/arm/boot/Image ./build/disk/images/arm32/vexpress-a9/Image
  # cp -f <linux_build_directory>/arch/arm/boot/dts/vexpress-v2p-ca9.dtb ./build/disk/images/arm32/vexpress-a9/vexpress-v2p-ca9.dtb
  # cp -f <busybox_rootfs_directory>/rootfs.img ./build/disk/images/arm32/vexpress-a9/rootfs.img
  # genext2fs -B 1024 -b 32768 -d ./build/disk ./build/disk.img
  OR
  [14. Create disk image for Xvisor with only Guest Basic Firmware]
  # mkdir -p ./build/disk/tmp
  # mkdir -p ./build/disk/system
  # cp -f ./docs/banner/roman.txt ./build/disk/system/banner.txt
  # cp -f ./docs/logo/xvisor_logo_name.ppm ./build/disk/system/logo.ppm
  # mkdir -p ./build/disk/images/arm32/vexpress-a9
  # dtc -q -I dts -O dtb -o ./build/disk/images/arm32/vexpress-a9-guest.dtb ./tests/arm32/vexpress-a9/vexpress-a9-guest.dts
  # cp -f ./build/tests/arm32/vexpress-a9/basic/firmware.bin.patched ./build/disk/images/arm32/vexpress-a9/firmware.bin
  # cp -f ./tests/arm32/vexpress-a9/basic/nor_flash.list ./build/disk/images/arm32/vexpress-a9/nor_flash.list
  # cp -f ./tests/arm32/vexpress-a9/xscript/one_guest_vexpress-a9.xscript ./build/disk/boot.xscript
  # genext2fs -B 1024 -b 32768 -d ./build/disk ./build/disk.img

  [15. Make U-boot compatible initrd for use with bootm command]
  # mkimage -A arm -O linux -T ramdisk -a 0x41000000 -n "Xvisor ramdisk" -d build/disk.img build/udisk.img

  [16. Unplug SD card from ODroid-X and plug it on your development machine]

  [17. Mount boot partition (or partition 0) of SD card on your development machine]

  [18. Copy uvmm.bin, DTB, and disk.img to boot partition of SD card]
  # cp -f build/uvmm.bin <path_to_mounted_boot_partition_of_sd_card>
  # cp -f build/arch/arm/board/generic/dts/samsung/exynos4412-odroidx.dtb <path_to_mounted_boot_partition_of_sd_card>
  # cp -f build/udisk.img <path_to_mounted_boot_partition_of_sd_card>

  [19. Unmount boot partition (or partition 0) of SD card from your development machine]

  [20. Unplug SD card from your development machine and plug it back on ODroid-X]

  [21. Connect to serial port of ODroid-X using Putty or Minicom]

  [22. Power-up or Reset ODroid-X and press any key when U-Boot shows auto-boot count down]

  [23. Enabled MMC interface from U-Boot command line interface]
  ODROIDX# mmc dev 0:2

  [24. Copy Xvisor from SD card to SDRAM]
  ODROIDX# fatload mmc 0:2 0x40200000 uvmm.bin

  [25. Copy the Xvisor DTB from SD card to SDRAM]
  ODROIDX# fatload mmc 0:2 0x40800000 exynos4412-odroidx.dtb

  [26. Copy disk image from SD card to SDRAM]
  ODROIDX# fatload mmc 0:2 0x42000000 udisk.img

  [27. Jump into Xvisor after disabling MMU, interrupts, etc]
  ODROIDX# bootm 0x40200000 0x42000000 0x40800000

  [28. Kick Guest0 for starting Basic Firmware]
  XVisor# guest kick guest0

  [29. Bind to virtual UART]
  XVisor# vserial bind guest0/uart0

  [30. Try few commands of Basic firmware or goto next step]
  [guest0/uart0] basic# hi
  [guest0/uart0] basic# hello
  [guest0/uart0] basic# help

  [31. Copy linux from NOR flash to RAM and start linux booting from RAM]
  [guest0/uart0] basic# autoexec
  (Note: "autoexec" is a short-cut command)
  (Note: The <xvisor_source_directory>/tests/arm32/vexpress-a9/linux/cmdlist file
   which we have added to guest NOR flash contains set of commands for booting
   linux from NOR flash)

  [32. Wait for Linux prompt to come-up and then try out some commands]
  [guest0/uart0] / # ls

  [33. Enter character seqence 'ESCAPE+x+q" return to Xvisor prompt]
  [guest0/uart0] / #

  (Note: replace all <> brackets based on your workspace)
  (Note: some of the above steps will need to be adapted for other
   types of ARM host)
  (Note: for more info on your desired ARM host refer docs/arm/)
  (Note: you are free to change the ordering of above steps based
   on your workspace)
